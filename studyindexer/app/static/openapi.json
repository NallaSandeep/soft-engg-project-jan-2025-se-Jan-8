{
  "openapi": "3.0.3",
  "info": {
    "title": "StudyIndexer API",
    "description": "Document Processing and Semantic Search Service\n\nFeatures:\n* Document upload and processing (PDF, DOCX, TEXT, MARKDOWN)\n* Semantic search across documents\n* Course-specific document collections\n* Role-based access control\n* Document metadata management",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "DocumentStatus": {
        "type": "string",
        "enum": ["pending", "processing", "completed", "failed"]
      },
      "DocumentType": {
        "type": "string",
        "enum": ["pdf", "text", "docx", "markdown"]
      },
      "CollectionType": {
        "type": "string",
        "enum": ["general", "course", "personal", "faq"]
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        }
      },
      "ErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "default": false
              },
              "error": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          }
        ]
      },
      "DocumentMetadata": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "course_id": {
            "type": "string",
            "nullable": true
          },
          "document_type": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collection": {
            "$ref": "#/components/schemas/CollectionType"
          },
          "custom_metadata": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "DocumentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "document_id": {
                "type": "string",
                "description": "Unique document identifier"
              },
              "status": {
                "$ref": "#/components/schemas/DocumentStatus"
              },
              "message": {
                "type": "string",
                "nullable": true
              },
              "metadata": {
                "$ref": "#/components/schemas/DocumentMetadata"
              },
              "error": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentInfo": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string",
            "description": "Unique document identifier"
          },
          "status": {
            "$ref": "#/components/schemas/DocumentStatus"
          },
          "metadata": {
            "$ref": "#/components/schemas/DocumentMetadata"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DocumentListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentInfo"
                }
              },
              "total": {
                "type": "integer",
                "description": "Total number of documents"
              }
            }
          }
        ]
      },
      "SearchQuery": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 3,
            "maxLength": 1000
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 10
          },
          "filters": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "collection": {
            "$ref": "#/components/schemas/CollectionType",
            "default": "general"
          },
          "min_score": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "default": 0.0
          }
        },
        "required": ["text"]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0
          },
          "content": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "page_number": {
            "type": "integer",
            "minimum": 1,
            "nullable": true
          },
          "position": {
            "type": "object",
            "nullable": true,
            "properties": {
              "chunk": {
                "type": "integer",
                "nullable": true
              },
              "start": {
                "type": "integer",
                "nullable": true
              },
              "end": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          "highlight": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer",
            "minimum": 1
          },
          "page_size": {
            "type": "integer",
            "minimum": 1
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0
          },
          "total_results": {
            "type": "integer",
            "minimum": 0
          },
          "has_next": {
            "type": "boolean"
          },
          "has_previous": {
            "type": "boolean"
          }
        }
      },
      "SearchResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/PaginationMetadata"
              },
              "query_time_ms": {
                "type": "number",
                "minimum": 0
              },
              "collection": {
                "type": "string"
              },
              "filters_applied": {
                "type": "object",
                "nullable": true,
                "additionalProperties": true
              }
            }
          }
        ]
      },
      "StorageStats": {
        "type": "object",
        "properties": {
          "uploads": {
            "type": "string",
            "description": "Upload directory size"
          },
          "vectors": {
            "type": "string",
            "description": "Vector database size"
          },
          "total": {
            "type": "string",
            "description": "Total storage used"
          },
          "raw_total_bytes": {
            "type": "integer",
            "description": "Total storage in bytes"
          }
        }
      },
      "ProcessingStats": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "integer",
            "default": 0,
            "description": "Number of pending documents"
          },
          "processing": {
            "type": "integer",
            "default": 0,
            "description": "Number of documents being processed"
          },
          "completed": {
            "type": "integer",
            "default": 0,
            "description": "Number of completed documents"
          },
          "failed": {
            "type": "integer",
            "default": 0,
            "description": "Number of failed documents"
          },
          "total": {
            "type": "integer",
            "description": "Total number of documents"
          }
        }
      },
      "CollectionStats": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Collection name"
          },
          "document_count": {
            "type": "integer",
            "description": "Number of documents"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Collection metadata"
          }
        }
      },
      "SystemStats": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          },
          {
            "type": "object",
            "properties": {
              "total_documents": {
                "type": "integer",
                "description": "Total number of documents"
              },
              "total_collections": {
                "type": "integer",
                "description": "Number of collections"
              },
              "collections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectionStats"
                },
                "description": "Collection statistics"
              },
              "storage_used": {
                "$ref": "#/components/schemas/StorageStats",
                "description": "Storage usage statistics"
              },
              "processing_status": {
                "$ref": "#/components/schemas/ProcessingStats",
                "description": "Processing statistics"
              },
              "embedding_model": {
                "type": "string",
                "description": "Current embedding model"
              },
              "embedding_device": {
                "type": "string",
                "description": "Current embedding device"
              },
              "last_update": {
                "type": "string",
                "format": "date-time",
                "description": "Last update timestamp"
              }
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Root endpoint",
        "description": "Returns basic service information",
        "security": [],
        "responses": {
          "200": {
            "description": "Service information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "documentation": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns service health status",
        "security": [],
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/documents": {
      "get": {
        "summary": "List all documents",
        "description": "Returns a list of all documents in the system (admin only)",
        "tags": ["admin"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of documents to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of documents to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/stats": {
      "get": {
        "summary": "Get system statistics",
        "description": "Returns system-wide statistics (admin only)",
        "tags": ["admin"],
        "responses": {
          "200": {
            "description": "System statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/upload": {
      "post": {
        "summary": "Upload document",
        "description": "Upload a new document for processing",
        "tags": ["documents"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Document file to upload"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "course_id": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "collection": {
                        "$ref": "#/components/schemas/CollectionType"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/my": {
      "get": {
        "summary": "List user documents",
        "description": "Returns a list of documents uploaded by the current user",
        "tags": ["documents"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of documents to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of documents to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/course/{course_id}": {
      "get": {
        "summary": "List course documents",
        "description": "Returns a list of documents for a specific course",
        "tags": ["documents"],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of documents to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of documents to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of course documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/{document_id}": {
      "get": {
        "summary": "Get document",
        "description": "Returns details of a specific document",
        "tags": ["documents"],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search": {
      "post": {
        "summary": "Search documents",
        "description": "Search across documents using semantic search",
        "tags": ["search"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/similar/{document_id}": {
      "get": {
        "summary": "Find similar documents",
        "description": "Find documents similar to a given document",
        "tags": ["search"],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "description": "Document ID to find similar documents for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of similar documents to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "min_score",
            "in": "query",
            "description": "Minimum similarity score (0-1)",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "default": 0.5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Similar documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
} 